apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion "$target_version".toInteger()
    defaultConfig {
        applicationId "de.ka.jamit.architecture"
        minSdkVersion "$min_version".toInteger()
        targetSdkVersion "$target_version".toInteger()
        versionCode "$project_version_code".toInteger()
        versionName "$project_version_name"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        dataBinding = true
    }
    hilt {
        enableTransformForLocalTests = true
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        prerelease {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    configurations { //build.gradle: Error: commons-logging defines classes that conflict with classes now provided by Android. S
        all {
            exclude group: 'commons-logging', module: 'commons-logging'
        }
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // base libraries
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.core:core-ktx:$ktx_core_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$roboelectric_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"

    // ui testing
    implementation "androidx.test:runner:$test_version"
    implementation "androidx.test:core:$test_version"
    implementation "androidx.test:rules:$test_version"
    debugImplementation "androidx.fragment:fragment-testing:$espresso_fragment_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_contrib_version"

    // hilt dependency injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodel_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_viewmodel_version"

    // logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    // leak detection
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakc_version"

    // networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$urlconnection_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rx_java_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"

    // room database
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    // time
    implementation "com.jakewharton.threetenabp:threetenabp:$java_time_abp_version"

    // csv
    implementation "com.opencsv:opencsv:$csv_version"

    // recyclerview animations
    implementation "jp.wasabeef:recyclerview-animators:$rv_animations_version"
}
